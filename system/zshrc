# powerlevel10k Instant Prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Plugins esenciales
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
source /opt/zsh-autocomplete/zsh-autocomplete.plugin.zsh
source /opt/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# powerlevel10k theme y configuracion
source /opt/powerlevel10k/powerlevel10k.zsh-theme
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# NVM (carga tardia)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

setopt AUTO_CD
#setopt CORRECT
setopt HIST_IGNORE_ALL_DUPS    # Evita duplicados en el historial
setopt SHARE_HISTORY           # Comparte el historial entre sesiones
setopt HIST_IGNORE_SPACE        # No guarda comandos que comiencen con un espacio
setopt APPEND_HISTORY           # Guarda comandos en tiempo real en el historial
plugins=(vi-mode)
PROMPT='%F{green}%1~%f âžœ '

# historial
export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=10000
export SAVEHIST=10000
export TERMINFO=$HOME/.terminfo
export TERM=xterm-256color


# auto cargas
autoload -U compinit && compinit -d ~/.zsh_compdump

# comandos terminal
bindkey -v
bindkey 'ii' vi-cmd-mode

# estilo base 
bindkey              '^I'         menu-complete
bindkey "$terminfo[kcbt]" reverse-menu-complete

bindkey $key[Up] up-line-or-history
bindkey $key[Down] down-line-or-history
# bindkey '\e[Z' reverse-menu-complete

zstyle ':autocomplete:tab:*' insert-unambiguous yes
zstyle ':autocomplete:tab:*' widget-style menu-select
zstyle ':autocomplete:*' min-input 2

zstyle ':completion:*' case-sensitive no
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*' list-colors ''
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*' 'l:|=* r:|=*'

zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
zstyle ':completion:*' progress yes

# ============================================ aliases

# sistema
alias qq='sudo shutdown now'
alias rr='sudo reboot now'
alias q='exit'
alias t='tmux'
alias mm='kill -9 -1'

# listar
alias l='lsd --group-dirs=first'
alias ls='lsd --group-dirs=first'
alias lsc='clear && ls'
alias la='lsd -a --group-dirs=first'
alias ll='lsd -lh --group-dirs=first'
alias lla='lsd -lha --group-dirs=first'
alias lc='ls -1'
alias lca='la -1'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias tree='pwd && tree'
alias treed='tree -d'
alias treedu='clear && tree -d'

alias fzfm='fzf -m --reverse --height 40%'
alias fzfl='fzf --reverse --height 40%'

# previsualizar
alias cat='/bin/bat'
alias catn='/bin/cat'
alias cata='cat *'
alias catl='cat $(ls | fzfm)'
alias catnl='/bin/bat --paging=never'


# ocultar
alias hdl='mv $(ls | fzfm) ~/Downloads/.verify; ls'
alias Hdl='mv $(find ~/Downloads/.verify -maxdepth 1 -type f -print0 | xargs -0 -n 1 realpath | fzfm) . && ls'
alias hda='mv * ~/Downloads/.verify/ && echo "limpieza completa"'
# eliminar
alias rml='rm -r $(ls | fzfm); ls'

# neovim
alias v='/opt/nvim/bin/nvim'
alias vi='v'
function V() { v "$(find -type f | fzfl)" }
function vv() { v "$(fzfl)" }
function vl() { v "$(fl)" }

# Ir a directorios
alias d='cd "$(find -type d | fzfl)"'
#alias c='pushd'
#alias C='popd'
alias ..='cd ../ && ls'
alias nv='cd ~/.config/nvim && ls '
alias dk='cd ~/Desktop && ls'
alias dw='cd ~/Downloads && ls'
alias vf='cd ~/Downloads/.verify && ls'
alias dc.='cd ~/Documents && ls'
alias pj.='cd ~/Projects && ls'
alias rp='cd ~/.config/repos && ls'
alias android.='cd ~/Projects/android'
alias tf='cd ~/Desktop/.TestFolder'
alias ft='cd ~/Projects/flutter'
function mkdir.() {mkdir $1; cd $1}
# Archivos
alias zshrc.='v ~/.zshrc'
# Aplicaciones

# revisar
function o() { xdg-open "$(cd; find -type f | fzf)" }
alias sz='source ~/.zshrc'

# portapapeles
alias gp="find -type f | fzf | sed 's/^..//' | tr -d '\n' | xclip -selection c"
alias xp="xprop WM_CLASS"
alias ,,='sudo apt update; sudo apt-get update; sudo parrot-upgrade; sudo apt update'

# funciones
# fondo
function bg(){
  rm ~/Pictures/Wallpaper/w.png 2> /dev/null ;
  cp $(find ~/Pictures/Wallpaper -type f -iname "*.png" | fzf)  ~/Pictures/Wallpaper/w.png ;
  bspc wm -r
}

# Extract nmap information
function extractPorts(){
	ports="$(cat $1 | grep -oP '\d{1,5}/open' | awk '{print $1}' FS='/' | xargs | tr ' ' ',')"
	ip_address="$(cat $1 | grep -oP '\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}' | sort -u | head -n 1)"
	echo -e "\n[*] Extracting information...\n" > extractPorts.tmp
	echo -e "\t[*] IP Address: $ip_address"  >> extractPorts.tmp
	echo -e "\t[*] Open ports: $ports\n"  >> extractPorts.tmp
	echo $ports | tr -d '\n' | xclip -sel clip
	echo -e "[*] Ports copied to clipboard\n"  >> extractPorts.tmp
	cat extractPorts.tmp; rm extractPorts.tmp
}

# Set 'man' colors
function man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}

function zc(){ echo "alias $1='$2'" >> ~/.zshrc ; sz }
function fl(){

	if [ "$1" = "h" ]; then
		fzf -m --reverse --preview-window down:20 --preview '[[ $(file --mime {}) =~ binary ]] &&
 	                echo {} is a binary file ||
	                 (bat --style=numbers --color=always {} ||
	                  highlight -O ansi -l {} ||
	                  coderay {} ||
	                  rougify {} ||
	                  cat {}) 2> /dev/null | head -500'

	else
        fzf -m --reverse --preview '[[ $(file --mime {}) =~ binary ]] &&
	                         echo {} is a binary file ||
	                         (bat --style=numbers --color=always {} ||
	                          highlight -O ansi -l {} ||
	                          coderay {} ||
	                          rougify {} ||
	                          cat {}) 2> /dev/null | head -500'
	fi
}



## -------------------------------------------- ordenar - borrar
function pswd(){
    grep $(awk -F "/" '{ print $1}' /home/k4rma/Documentos/Auxiliar/.noTocar.txt | rofi -dmenu) /home/k4rma/Documentos/Auxiliar/.noTocar.txt | cut -f 2 -d "/" | tr -d '\n'| xclip -selection c
}
alias zz='cd; zathura $(find . -type f -iname "*.pdf" | fzf)'

# servidor xamp
alias dbi='sudo /opt/lampp/lampp start'
alias dbo='sudo /opt/lampp/lampp stop'
alias dbv='sudo rm /opt/lampp/htdocs/dev 2> /dev/null ; sudo ln -s $(pwd) /opt/lampp/htdocs/dev;'
# servidor live
alias lsv='live-server --port=8000 --browser=google-chrome'
function b(){
  sed -i "s/$(more /home/k4rma/.config/bspwm/bspwmrc | grep "border_width")/bspc config border_width         $1/g" /home/k4rma/.config/bspwm/bspwmrc; bspc wm -r
}
function p(){
  sed -i "s/$(more /home/k4rma/.config/bspwm/bspwmrc | grep "window_gap")/bspc config window_gap           $1/g" /home/k4rma/.config/bspwm/bspwmrc; bspc wm -r;
  sed -i "s/$(more /home/k4rma/.config/picom/picom.conf | grep "corner-radius =")/corner-radius = $2;/g" /home/k4rma/.config/picom/picom.conf
}
function z(){ zathura $1 & }
alias zz='cd; zathura $(find . -type f -iname "*.pdf" | fzf)'
alias addc='pwd >> ~/Documentos/Auxiliar/posiciones.txt'

alias pls='awk -F "/" '{ print $NF}' /home/k4rma/Documentos/Auxiliar/posiciones.txt | rofi -dmenu -i'

alias menurofi='rofi -dmenu -i'
function pmenu(){
    awk -F "/" '{ print $NF}' /home/k4rma/Documentos/Auxiliar/posiciones.txt | rofi -dmenu -i
}


## ------------------------- revisar
function installer(){ sudo apt install $1 -y }
alias note='v ~/Documents/editables/notas.txt'

#rm -rf ~/.config/nvim/
function rmnvim(){
  cd
  rm -rf ~/.local/share/nvim 
  rm -rf ~/.local/state/nvim 
  rm -rf ~/.cache/nvim
	notify-send "nvim eliminado" -i ok
}
alias lazynviminstall='git clone https://github.com/LazyVim/starter ~/.config/nvim; cd ~/.config/nvim; rm -rf .git'
alias lazyinstall='git clone https://github.com/LazyVim/starter' 

# montaje montaje de disco
#alias dti='cd && sudo mount /dev/sda1 /mnt/DataBase; sudo chown $(whoami):$(whoami) /mnt/DataBase'
alias dti='sudo mount UUID="eee83d91-9045-4dc6-b73c-dacd938bc1a7" /mnt/DataBase && cd /mnt/DataBase && notify-send "Disco Montado"'
alias dto='cd && sudo umount /mnt/DataBase && notify-send "Disco Desmontado"'
alias dt='cd /mnt/DataBase; ls'
alias dtl='ls /mnt/DataBase'

# flutter
function fc(){
	flutter create ~/Projects/flutter/$1 && cd ~/Projects/flutter/$1
}
function fg(){
	flutter build apk
	cd build/app/outputs/apk/debug
}
#------- revisar
alias al='v ~/.config/alacritty/alacritty.yml'


alias lu='clear && lua main.lua'
alias lll='v ~/.config/lsd/config.yml'
alias aaa='v ~/.config/alacritty/alacritty.yml'


alias tt='pkill Xorg'
alias init='startx'

